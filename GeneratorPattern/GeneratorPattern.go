package GeneratorPattern

// The program defines a function called Generator that returns a channel of integers.
// The generator function runs a goroutine that continuously generates and sends integers to the channel.
// The main function creates a generator and prints the first 10 numbers generated by the generator.

// The generator design pattern is useful for generating sequences of values or for generating values on demand,
// as it allows you to avoid the overhead of creating and storing large arrays of data upfront.
// It also allows you to generate values as needed, rather than all at once, which can be more efficient in some cases.

// Generator is a function that generates a sequence of integers.
func Generator() <-chan int {
	ch := make(chan int)
	go func() {
		for i := 0; ; i++ {
			ch <- i
		}
	}()
	return ch
}
